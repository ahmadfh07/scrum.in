<!-- Bagian yang mirip Navbar -->
<div class="flex flex-row w-full h-14 pt-3">
  <!-- Kiri -->
  <span id="projectId" class="hidden"><%= project.projectId %></span>
  <div class="flex flex-row w-4/5">
    <h1 class="pl-5 pt-2 text-xs font-medium">Dashboard</h1>
    <h1 class="pl-2 pt-2 text-xs font-medium">/</h1>
    <h1 class="pl-2 pt-2 text-xs font-light">Project</h1>
    <h1 class="pl-2 pt-2 text-xs font-medium">/</h1>
    <h1 class="pl-2 pt-2 text-xs font-light"><%= project.projectName %></h1>
    <h1 class="pl-2 pt-2 text-xs font-medium">/</h1>
    <h1 class="pl-2 pt-2 text-xs font-light">Timeline</h1>
  </div>
  <!-- Kanan / Profil-->
  <div class="dropdown inline-block relative mb-2">
    <button class="flex w-full">
      <span class="flex mr-1">
        <div class="flex flex-row w-1/5 mb-2">
          <!-- Avatar -->
          <img class="flex w-16 my-auto mr-1" src="/assets/user_avatar.png" alt="">
          <!-- Nama -->
          <div class="flex flex-col my-auto ml-1">
            <h1 class="flex text-sm font-semibold"><%- user.fName %> <%- user.lName %></h1>
            <h1 class="flex text-xs"><%- user.email %></h1>
          </div>
        </div>
      </span>
    </button>
    <ul class="dropdown-menu absolute hidden text-black items-center">
      <li class="justify-center"><a class="w-44 rounded-b-xl hover:bg-green-200 py-2 px-4 block text-sm font-semibold justify-center" href="/signout">Sign Out</a></li>
    </ul>
  </div>
</div>


<!-- The wrapper of tabs -->
<div>
  <!-- Tab Buttons -->
  <div id="tab-buttons" class="flex ml-12 bg-[#DEE5D4]">
    <a href="/project/<%= project.projectId %>/overview" class="inline-block px-5 py-3 text-xs  text-black divide-y-4">Overview
    </a>
    <a href="/project/<%= project.projectId %>/planning" class="inline-block px-5 py-3 text-xs  text-black divide-y-4">Planning
    </a>
    <a href="/project/<%= project.projectId %>/timeline" class="inline-block px-5 py-3 text-xs  text-black divide-y-4">Timeline
      <hr class="border mt-2 rounded-lg">
    </a>
  </div>

  <!-- Tab Panels -->
  <div id="tab-panels" class="px-8 m-auto">
    <div id="eventBubbler" class="flex flex-col w-full m-auto">
      <!-- Tab Buttons -->
      <div id="tab-buttons2" class="flex justify-center bg-[#DEE5D4]">
        <a href="javascript:void(0)" onclick="changeTab(event, 0)" class="inline-block px-5 py-3 text-xs  text-black divide-y-4">Calendar
          <hr class="border mt-2 rounded-lg">
        </a>
        <a href="javascript:void(0)" onclick="changeTab(event, 1)" class="inline-block px-5 py-3 text-xs  text-black divide-y-4">Board
          <hr class="border mt-2 rounded-lg">
        </a>
      </div>

      <!-- Tab Panels -->
      <div id="tab-panels2" class="px-8 py-2 w-full m-auto">

        <div class="flex flex-row gap-1">
          <!-- KIRI -->
          <div class="flex flex-row w-7/12 pl-8 pr-6 gap-4">
            <!-- TO DO -->
            <div class="flex flex-col w-36">
              <div class="flex flex-row w-full justify-between mt-2">
                <h1 class="flex text-[10px] my-auto px-3">To do</h1>
              </div>

              <div class="rounded-lg">
                <!-- List backlog -->
                <div class="flex flex-col p-3" id="backlogsCotainer" data-topic="To Do" ondrop="drop(event)" ondragover="allowDrop(event)">
                  <% backlogs.forEach(e => { %>
                  <% if (e.backlogStatus == "To Do") { %>
                  <div data-backlogId="<%= e._id %>" class="flex flex-col p-1 w-full mx-auto bg-white rounded-md my-1 hover:cursor-pointer" id="Backlog1" draggable="true" ondragstart="dragStart(event)">
                    <h1 id="backlogItem" data-backlogId="<%= e._id %>" class="backlog-item flex my-auto text-[8px] w-full "><%= e.backlogName %></h1>
                    <div class="mt-1 flex flex-row h-3 w-full justify-start">
                      <div class="flex rounded-full w-[10px] h-[10px] bg-slate-500">
                        <h1 class="flex text-[7px] text-white m-auto">C</h1>
                      </div>
                    </div>
                  </div>
                  <% } %>
                  <% }) %>
                </div>
              </div>
            </div>

            <!-- DOING -->
            <div class="flex flex-col w-36">
              <div class="flex flex-row w-full justify-between mt-2">
                <h1 class="flex text-[10px] my-auto px-3">Doing</h1>
              </div>

              <div class="rounded-lg">
                <!-- List backlog -->
                <div class="flex flex-col p-3" id="backlogsCotainer" data-topic="Doing" ondrop="drop(event)" ondragover="allowDrop(event)">
                  <% backlogs.forEach(e => { %>
                  <% if (e.backlogStatus == "Doing") { %>
                  <div data-backlogId="<%= e._id %>" class="flex flex-col p-1 w-full mx-auto bg-white rounded-md my-1 hover:cursor-pointer" id="Backlog1" draggable="true" ondragstart="dragStart(event)">
                    <h1 id="backlogItem" data-backlogId="<%= e._id %>" class="backlog-item flex my-auto text-[8px] w-full "><%= e.backlogName %></h1>
                    <div class="mt-1 flex flex-row h-3 w-full justify-start">
                      <div class="flex rounded-full w-[10px] h-[10px] bg-slate-500">
                        <h1 class="flex text-[7px] text-white m-auto">C</h1>
                      </div>
                    </div>
                  </div>
                  <% } %>
                  <% }) %>
                </div>
              </div>
            </div>

            <!-- COMPLETED -->
            <div class="flex flex-col w-36">
              <div class="flex flex-row w-full justify-between mt-2">
                <h1 class="flex text-[10px] my-auto px-3">Done</h1>
              </div>

              <div class="rounded-lg">
                <!-- List backlog -->
                <div class="flex flex-col p-3" id="backlogsCotainer" data-topic="Done" ondrop="drop(event)" ondragover="allowDrop(event)">
                  <% backlogs.forEach(e => { %>
                  <% if (e.backlogStatus == "Done") { %>
                  <div data-backlogId="<%= e._id %>" class="flex flex-col p-1 w-full mx-auto bg-white rounded-md my-1 hover:cursor-pointer" id="Backlog1" draggable="true" ondragstart="dragStart(event)">
                    <h1 id="backlogItem" data-backlogId="<%= e._id %>" class="backlog-item flex my-auto text-[8px] w-full "><%= e.backlogName %></h1>
                    <div class="mt-1 flex flex-row h-3 w-full justify-start">
                      <div class="flex rounded-full w-[10px] h-[10px] bg-slate-500">
                        <h1 class="flex text-[7px] text-white m-auto">C</h1>
                      </div>
                    </div>
                  </div>
                  <% } %>
                  <% }) %>
                </div>
              </div>
            </div>
          </div>

          <!-- KANAN -->
          <div class="flex flex-col h-[460px] p-4 bg-white rounded-xl w-5/12">
            <h1 id="BacklogName" class=" flex text-base font-semibold"><%= backlogs[0].backlogName %></h1>
            <div class="flex flex-col mt-3 gap-1">
              <h1 class="text-[10px]">Assigned</h1>
              <div class="flex flex-row gap-1">
                <!-- <div class="flex rounded-full w-5 h-5 bg-slate-500">
                  <h1 class="flex text-sm text-white m-auto">C</h1>
                </div> -->
                <div class="member-modal-open flex rounded-full w-5 h-5 border-2 border-dashed border-slate-500 hover:cursor-pointer">
                  <svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" fill="currentColor" class="bi bi-person-plus m-auto" viewBox="0 0 16 16">
                    <path d="M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                    <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z" />
                  </svg>
                </div>
              </div>
            </div>
            <div class="flex flex-row mt-3">
              <h1 class="flex text-[10px]">Story Point</h1>
              <h1 id="StoryPoint" class="flex text-[10px] ml-4"><%= backlogs[0].storyPoint %></h1>
            </div>
            <div class="flex flex-col mt-3 gap-1">
              <h1 class="flex text-[10px]">Definition of Done</h1>
              <p id="DefinitionOfDone" class="flex text-[10px]"><%= backlogs[0].definitionOfDone%></p>
            </div>
            <div class="flex flex-col mt-3 gap-1">
              <h1 class="flex text-[10px]">Comment</h1>
              <input class="flex rounded-lg hover:border-black border-2" type="text" name="" id="backlogComment">
            </div>
            <!-- List Comment -->
            <div id="commentsContainer" class="flex flex-col gap-2 p-2 mt-3 border-2 w-full h-40 overflow-scroll rounded-lg">
              <% comments.forEach(e => { %>
              <% if (e.backlogId == backlogs[0]._id) { %>
              <div class="flex flex-col gap-1">
                <div class=" flex flex-row gap-1">
                  <div class="flex rounded-full w-[15px] h-[15px] bg-slate-500">
                    <h1 class="flex text-[10px] text-white m-auto"><%= e.commenter[0].toUpperCase() %></h1>
                  </div>
                  <h1 class="flex text-[10px]"><%= e.commenter %></h1>
                </div>
                <p class="flex text-[10px] text-justify"><%= e.comment %></p>
              </div>
              <% } %>
              <% }) %>
            </div>
            <button id="btnSaveBacklogUpdate" data-backlogId="<%= backlogs[0]._id %>" data-sprintId="<%= backlogs[0].sprintId %>" class=" bg-[#4B6D5F] mt-2 hover:bg-[#7c9c8e] rounded-2xl w-14 h-8 text-[10px] text-white">Save</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<!-- Modal untuk assign -->
<div class="member-modal mt-10 fixed inset-0 opacity-0 pointer-events-none transition duration-800 w-40 mx-auto">
  <div class="modal-content flex flex-col bg-white rounded-md shadow-lg m-auto">
    <div class="flex justify-end mt-2">
      <div class="member-modal-close w-5 justify-end">
        <svg class="hover:cursor-pointer" xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
          <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
        </svg>
      </div>
    </div>
    <h1 class="font-semibold text-[8px] text-center mb-2">Project Member</h1>
    <div class="flex flex-col items-center w-10/12 mx-auto mb-3 gap-1">
      <% rolesAndHolder.forEach(e => { %>
      <% if (e.roleName != "Scrum Master") { %>
      <div class="flex flex-row hover:bg-slate-100 hover:cursor-pointer w-full gap-1">
        <div class="flex rounded-full w-[15px] h-[15px] bg-slate-500">
          <h1 class="flex text-[10px] text-white m-auto"><%= e.holders.username[0].toUpperCase() %></h1>
        </div>
        <h1 class="flex text-[8px] my-auto"><%= e.holders.username %></h1>
      </div>
      <% } %>
      <% }) %>
    </div>
  </div>
</div>

<script>
  // JS untuk buka tutup pop-up
  const modal = document.querySelector('.member-modal');
  const modalOpen = document.querySelector('.member-modal-open');
  const modalClose = document.querySelector('.member-modal-close');

  modalOpen.addEventListener('click', function() {
    modal.classList.remove('opacity-0', 'pointer-events-none');
    modal.classList.add('opacity-100');
  });

  modalClose.addEventListener('click', function() {
    modal.classList.remove('opacity-100');
    modal.classList.add('opacity-0', 'pointer-events-none');
  });

  // Awal kode untuk draggable
  let draggedItem = null

  function dragStart(event) {
    // event.dataTransfer.setData('text/plain', event.target.id);
    draggedItem = event.target
  }

  function allowDrop(event) {
    event.preventDefault();
  }

  function drop(event) {
    event.preventDefault();
    // const taskId = event.dataTransfer.getData('text/plain');
    // const taskElement = document.getElementById(taskId);
    const destinationId = event.currentTarget.id;
    const destinationElement = document.getElementById(destinationId);
    event.currentTarget.appendChild(draggedItem);
    console.log(event.currentTarget.dataset.sprintid, draggedItem.dataset.backlogid)
    fetch(`${window.location.origin}/project/${projectId}/timeline/insert-backlog-to-kanban-topic`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          "backlogId": draggedItem.dataset.backlogid,
          "backlogStatus": event.currentTarget.dataset.topic
        })
      })
      .then((response) => response.json())
      .then((data) => {
        if (data.status === `error`) {
          alert(data.errors)
          console.log(data)
          return
        }
        location.reload()
      })
      .catch((error) => {
        console.log(error);
      });
  }
  // Akhir kode untuk draggable

  const eventBubbler = document.querySelector("#eventBubbler")
  const BacklogName = document.querySelector("#BacklogName")
  const DefinitionOfDone = document.querySelector("#DefinitionOfDone")
  const StoryPoint = document.querySelector("#StoryPoint")
  const btnSaveBacklogUpdate = document.querySelector("#btnSaveBacklogUpdate")
  const projectId = document.querySelector("#projectId").innerHTML
  const backlogComment = document.querySelector("#backlogComment")
  const commentsContainer = document.querySelector("#commentsContainer")

  eventBubbler.addEventListener("click", (e) => {
    if (e.srcElement.classList.contains('backlog-item')) {
      fetch(`${window.location.origin}/project/${projectId}/planning/get-backlog?id=${e.srcElement.dataset.backlogid}`, {})
        .then((response) => response.json())
        .then((data) => {
          if (data.status === `error`) {
            alert(data)
            console.log(data)
            return
          }
          const {
            _id,
            backlogName,
            definitionOfDone,
            storyPoint,
            sprintId
          } = data.data
          BacklogName.innerHTML = backlogName
          DefinitionOfDone.innerHTML = definitionOfDone
          StoryPoint.value = storyPoint
          btnSaveBacklogUpdate.setAttribute("data-backlogid", _id)
          btnSaveBacklogUpdate.setAttribute("data-sprintid", sprintId)
        })
        .catch((error) => {
          console.log(error);
        });

      fetch(`${window.location.origin}/project/${projectId}/timeline/get-comments?backlogId=${e.srcElement.dataset.backlogid}`, {})
        .then((response) => response.json())
        .then((data) => {
          if (data.status === `error`) {
            alert(data)
            console.log(data)
            return
          }
          let comments = ``
          data.data.forEach(e => {
            comments += `<div class="flex flex-col gap-1">
                <div class=" flex flex-row gap-1">
                  <div class="flex rounded-full w-[15px] h-[15px] bg-slate-500">
                    <h1 class="flex text-[10px] text-white m-auto">${e.commenter[0].toUpperCase()}</h1>
                  </div>
                  <h1 class="flex text-[10px]">${e.commenter}</h1>
                </div>
                <p class="flex text-[10px] text-justify">${e.comment}</p>
              </div>`
          });
          commentsContainer.innerHTML = comments
        })
        .catch((error) => {
          alert(err.message)
          console.log(error);
        });
    }
  })
  console.log("tes")

  btnSaveBacklogUpdate.addEventListener("click", (e) => {
    fetch(`${window.location.origin}/project/${projectId}/timeline/planning-backlog?id=${e.srcElement.dataset.backlogid}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          "backlogId": e.srcElement.dataset.backlogid,
          "sprintId": e.srcElement.dataset.sprintid,
          "comment": backlogComment.value
        })
      })
      .then((response) => response.json())
      .then((data) => {
        if (data.status === `error`) {
          alert(data.errors)
          console.log(data)
          return
        }
        location.reload()
      })
      .catch((error) => {
        alert(error);
        console.log(error);
      });

  })
</script>