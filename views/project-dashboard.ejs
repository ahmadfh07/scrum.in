<!-- Bagian yang mirip Navbar -->
<div class="flex flex-row w-full h-14 pt-3">
  <!-- Kiri -->
  <div class="flex flex-row w-4/5">
    <h1 class="pl-5 pt-2 text-xs font-medium">Dashboard</h1>
    <h1 class="pl-2 pt-2 text-xs font-medium">/</h1>
    <h1 class="pl-2 pt-2 text-xs font-light">Project</h1>
  </div>
  <!-- Kanan / Profil-->
  <div class="dropdown inline-block relative mb-2">
    <button class="flex w-full">
      <span class="flex mr-1">
        <div class="flex flex-row w-1/5 mb-2">
          <!-- Avatar -->
          <img class="flex w-16 my-auto mr-1" src="/assets/user_avatar.png" alt="">
          <!-- Nama -->
          <div class="flex flex-col my-auto ml-1">
            <h1 class="flex text-sm font-semibold"><%- user.fName %> <%- user.lName %></h1>
            <h1 class="flex text-xs"><%- user.email %></h1>
          </div>
        </div>
      </span>
    </button>
    <ul class="dropdown-menu absolute hidden text-black items-center">
      <li class="justify-center"><a class="w-44 rounded-b-xl hover:bg-green-200 py-2 px-4 block text-sm font-semibold justify-center" href="/signout">Sign Out</a></li>
    </ul>
  </div>
</div>

<!-- Bagian Dashboard Project -->
<div class="flex flex-col items-center w-full bg-[#DEE5D4]">
  <h1 id="username" class="hidden"><%- user.username %></h1>
  <!-- Pengumuman -->
  <div class="flex flex-col items-center text-center mt-16">
    <h1 class="flex text-base">You don't have any project yet,</h1>
    <h1 class="flex text-base">Choose one of the options below</h1>
  </div>

  <!-- Create or Join Project -->
  <div class="flex flex-row items-center text-center mt-20">
    <!-- Create Project -->
    <div class="modal-open flex flex-col w-60 h-60 bg-white rounded-xl shadow-2xl items-center my-auto">
      <div class="flex flex-col items-center my-auto">
        <img class="flex w-14 h-14 mb-4" src="/assets/logo_plus.png" alt="">
        <h1 class="flex justify-center mt-6 text-base text-[#9B9B9B]">Create New Project</h1>
      </div>
    </div>
    <!-- Modal 1 -->
    <div class="modal my-4 fixed inset-0 opacity-0 pointer-events-none transition duration-800 w-1/3 m-auto">
      <div class="modal-content flex flex-col bg-white rounded-xl shadow-lg m-auto">
        <div class="flex justify-end  mt-4 ">
          <div class="modal-close w-10 justify-end">
            <svg class="hover:cursor-pointer" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
              <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
            </svg>
          </div>
        </div>
        <h1 class="font-semibold text-xl my-3">Create New Project</h1>
        <div class="flex flex-col items-center w-10/12 mx-auto mb-8">
          <div class="w-full text-left">
            <label class="text-sm" for="name">Project Name</label>
            <input class="w-full border-2 px-2 py-1.5 rounded-md mt-2" type="text" id="projectName" name="name" />
          </div>
          <div class="w-full text-left mt-2">
            <label class="text-sm" for="ket">Description</label><br />
            <textarea class="w-full text-sm border-2 px-2 py-1.5 rounded-md mt-2 h-20" type="text" id="projectDesc" name="ket"></textarea>
          </div>
          <div class="flex gap-x-2 w-full text-left mt-2">
            <div class="w-10/12" id="role-container">
              <label class="text-sm" for="tiga">Role Name</label>
              <div class="flex flex-row">
                <div class="flex flex-col w-44">
                  <input id="rolesInput" class="flex rounded-md w-40 border-2 py-1.5 mr-4 mb-3" type="text" name="">
                </div>
                <button class="flex">
                  <h1 onclick="nambahRole()" class="p-3 rounded-md border-2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                      <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                    </svg>
                  </h1>
                </button>
              </div>
            </div>
          </div>
          <div class="flex gap-x-3 self-start mt-4">
            <button id="btnCreateProject" type="submit" class="bg-black text-white hover:bg-slate-300 hover:text-black rounded-full py-2 px-4 text-sm">Create</button>
          </div>
        </div>
      </div>
    </div>

    <h1 class="flex mx-10">or</h1>

    <!-- Join Project -->
    <div class="modal-open2 flex flex-col w-60 h-60 bg-white rounded-xl shadow-2xl items-center my-auto">
      <div class="flex flex-col items-center my-auto">
        <img class="flex w-20 h-20 mb-4" src="/assets/logo_add.png" alt="">
        <h1 class="flex justify-center mt-6 text-base text-[#9B9B9B]">Join Project</h1>
      </div>
    </div>
    <!-- Modal 2 -->
    <div class="modal2 my-4 fixed inset-0 opacity-0 pointer-events-none transition duration-300 w-1/3 mx-auto">
      <div class="modal-content2 flex-col bg-white rounded-xl shadow-lg mx-auto">
        <div class="flex justify-end pt-4">
          <div class="modal-close2 w-10 justify-end">
            <svg class="hover:cursor-pointer" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
              <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
            </svg>
          </div>
        </div>
        <h1 class="font-semibold text-xl mx-auto mt-3">Join Project</h1>
        <div class="flex flex-col w-full mb-6 p-8">
          <div class="flex flex-col w-full mx-auto mb-8">
            <label class="flex text-sm items-start" for="codeproject">Your Code Project</label>
            <input class="w-40 bg-white border-2 px-2 py-1.5 rounded-md mt-2 placeholder:p-1 placeholder:text-sm" placeholder="Your Code" type="text" name="codeproject" id="codeproject">
          </div>

          <div class="flex flex-col w-full mx-auto mb-8">
            <label class="flex text-sm items-start" for="targetRole">Role according to Code</label>
            <input class="w-60 bg-slate-100 border-2 px-2 py-1.5 rounded-md mt-2" type="text" name="targetRole" id="targetRole">
          </div>

          <div class="flex flex-row mb-4 justify-start">
            <div class="bg-black items-start text-white hover:bg-slate-300 hover:text-black rounded-full py-2 px-4 text-sm">
              <a id="btnJoin" class="px-2" href="#">Join</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  // JS untuk buka tutup pop-up
  const modal = document.querySelector('.modal');
  const modalOpen = document.querySelector('.modal-open');
  const modalClose = document.querySelector('.modal-close');

  modalOpen.addEventListener('click', function() {
    modal.classList.remove('opacity-0', 'pointer-events-none');
    modal.classList.add('opacity-100');
  });

  modalClose.addEventListener('click', function() {
    modal.classList.remove('opacity-100');
    modal.classList.add('opacity-0', 'pointer-events-none');
  });

  // JS untuk buka tutup pop-up
  const modal2 = document.querySelector('.modal2');
  const modalOpen2 = document.querySelector('.modal-open2');
  const modalClose2 = document.querySelector('.modal-close2');

  modalOpen2.addEventListener('click', function() {
    modal2.classList.remove('opacity-0', 'pointer-events-none');
    modal2.classList.add('opacity-100');
  });

  modalClose2.addEventListener('click', function() {
    modal2.classList.remove('opacity-100');
    modal2.classList.add('opacity-0', 'pointer-events-none');
  });

  //JS untuk add role
  function nambahRole() {
    const roleContainer = document.getElementById("role-container");
    let html = '<input id="rolesInput" class="flex rounded-md w-40 border-2 py-1.5 mr-4 mb-3" type="text" name="">';
    roleContainer.insertAdjacentHTML("beforeend", html);
  }

  // const roleInput = document.querySelector("#role-input");
  // const roleWrapperInput = document.querySelector("#role-wrapper-input");
  // const roleContainer = document.querySelector("#role-container");
  // const rolesEl = document.querySelector("#roles");

  // const roles = [1];
  // loadData();

  // function loadData() {
  //   let rolesHTML = "";
  //   roles.forEach((r, i) => {
  //     rolesHTML += `<div class="flex items-center gap-y-3">
  //                               <input class="w-1/2 border-2 px-2 py-1.5 rounded-md mr-3" type="text" id="rolesInput"
  //                                   name="bebas"><br /><br />
  //                               ${
  //                                 i === roles.length - 1
  //                                   ? `<div class="p-2 bg-white rounded-md cursor-pointer" onclick="addRoleInput(${i})">
  //                                   <svg xmlns="http://www.w3.org/2000/svg" class="text-gray-700" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  //                                       <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
  //                                       <path d="M12 5l0 14"></path>
  //                                       <path d="M5 12l14 0"></path>
  //                                   </svg>
  //                               </div>`
  //                                   : ""
  //                               }
  //                           </div>`;
  //   });
  //   rolesEl.innerHTML = rolesHTML;
  // }

  // function addRoleInput(i) {
  //   roles.push(i + 1);
  //   console.log(i, roles);
  //   loadData();
  // }


  //JS untuk add role2
  // const roleInput2 = document.querySelector("#role-input2");
  // const roleWrapperInput2 = document.querySelector("#role-wrapper-input2");
  // const roleContainer2 = document.querySelector("#role-container2");
  // const rolesEl2 = document.querySelector("#roles2");

  // const roles2 = [1];
  // loadData2();

  // function loadData2() {
  //   let rolesHTML2 = "";
  //   roles2.forEach((r, i) => {
  //     rolesHTML2 += `<div class="flex items-center gap-y-3">
  //                               <input class="w-1/2 border-2 px-2 py-1.5 rounded-md mr-3" type="text" id="rolesInput" name="bebas"><br /><br />
  //                               ${
  //                                 i === roles2.length - 1
  //                                   ? `<div class="p-2 bg-white rounded-md cursor-pointer" onclick="addRoleInput2(${i})">
  //                                   <svg xmlns="http://www.w3.org/2000/svg" class="text-gray-700" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  //                                       <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
  //                                       <path d="M12 5l0 14"></path>
  //                                       <path d="M5 12l14 0"></path>
  //                                   </svg>
  //                               </div>`
  //                                   : ""
  //                               }
  //                           </div>`;
  //   });
  //   rolesEl2.innerHTML = rolesHTML2;
  // }

  // function addRoleInput2(i) {
  //   roles2.push(i + 1);
  //   console.log(i, roles2);
  //   loadData2();
  // }

  // js create new project
  let lastClick = 0; //debounce
  let delay = 3000; //debounce
  const btnCreateProject = document.querySelector("#btnCreateProject")

  const productOwner = document.querySelector("#username")

  btnCreateProject.addEventListener("click", (e) => {
    if (lastClick >= Date.now() - delay) return; //debaounce
    lastClick = Date.now(); //debounce
    const projectName = document.querySelector("#projectName").value
    const projectDesc = document.querySelector("#projectDesc").value
    const rolesInput = document.querySelectorAll("#rolesInput")
    let rolesNeeded = []
    rolesInput.forEach((v) => {
      rolesNeeded.push(v.value)
    })
    fetch(`${window.location.origin}/project/create-new`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          "projectName": projectName,
          "projectDesc": projectDesc,
          "productOwner": productOwner.textContent,
          "rolesNeeded": rolesNeeded
        })
      })
      .then((response) => response.json())
      .then((data) => {
        if (data.status === `error`) {
          alert(data.errors?.projectName.msg)
          return
        }
        window.location.href = `${window.location.origin}/project/${data.projectId}`
      })
      .catch((error) => {
        console.log(error);
      });

  })
  // end of js for create new project

  // js for joining project
  const codeProjectInput = document.querySelector("#codeproject")
  const targetRole = document.querySelector("#targetRole")
  const btnJoin = document.querySelector("#btnJoin")

  codeProjectInput.addEventListener("input", (e) => {
    if (codeProjectInput.value.length == 13) {
      const [projectCode, roleCode] = codeProjectInput.value.split("/")
      fetch(`${window.location.origin}/project/get-target-role?projectId=${projectCode}&roleId=${roleCode}`)
        .then((response) => response.json())
        .then((response) => {
          if (response.status === `error`) {
            targetRole.value = response.msg
            return
          }
          targetRole.value = response.data.roleName
          console.log(response.data.roleName)
        })
        .catch((error) => {
          console.log(error);
        });
      // btnJoin.setAttribute("href", `/project/${projectCode}/join?role=${roleCode}`)
    }
  })

  btnJoin.addEventListener("click", (e) => {
    if (lastClick >= Date.now() - delay) return; //debaounce
    lastClick = Date.now(); //debounce
    const [projectCode, roleCode] = codeProjectInput.value.split("/")
    fetch(`${window.location.origin}/project/${projectCode}/join?role=${roleCode}`)
      .then((response) => response.json())
      .then((response) => {
        if (response.status === `error`) {
          alert(response.msg)
          console.log(response.msg)
          return
        }
        window.location.href = `${window.location.origin}/project/${response.data}`
      })
      .catch((error) => {
        console.log(error);
      });

  })
  // end of js for joining project
</script>